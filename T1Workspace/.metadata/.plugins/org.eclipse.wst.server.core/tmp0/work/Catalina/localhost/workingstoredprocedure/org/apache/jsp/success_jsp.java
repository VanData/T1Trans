/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2016-06-20 15:41:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import javax.sql.*;

public final class success_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/struts2-core-2.3.15.3.jar", Long.valueOf(1466432579088L));
    _jspx_dependants.put("jar:file:/C:/Users/nick.vanderlaan/T1Workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/workingstoredprocedure/WEB-INF/lib/struts2-core-2.3.15.3.jar!/META-INF/struts-tags.tld", Long.valueOf(1381885572000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.sql");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fs_005fproperty_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fs_005fproperty_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fs_005fproperty_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>File Upload Success</title>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery/jquery-ui.js\"></script>\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write(" <script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath());
      out.write("/js/successNew.js\"></script> \r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\tSubmit to run stored procudure\r\n");
      out.write("\t<div id=\"keshav\"></div>\r\n");
      out.write("\t<center>\r\n");
      out.write("\t\r\n");
      out.write("\t<button type=\"button\" id=\"runPr\" class=\"btn btn-success btn-lg\">RUN</button>\r\n");
      out.write("\t\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\tYou have successfully uploaded\r\n");
      out.write("\t");
      if (_jspx_meth_s_005fproperty_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");

		java.sql.Connection con;
		System.out.println("keeeeeeeeeeeeeeevvvvvv");

		java.sql.Statement stmt = null;
		java.sql.ResultSet rs = null;
		java.sql.PreparedStatement pst = null;


		try {
		System.out.println("keeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee222");
// for sql server

 	/*	Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
		String connectionUrl = "jdbc:sqlserver://192.168.0.231;database=test";
		String user = "scubeadmin";
		String pass = "admin@123"; 
	*/	
		
// for MySql

 		Class.forName("com.mysql.jdbc.Driver");
		String connectionUrl = "jdbc:mysql://127.0.0.1:3307/test";
		String user = "root";
		String pass = "secret_root_password"; 
 
		con = java.sql.DriverManager.getConnection(connectionUrl, user,pass);
			 
			 
			System.out.println("keeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee222");
			
			System.out.println("kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk");

			stmt = con.createStatement();

			/*  if (con != null) {
			     DatabaseMetaData dm = (DatabaseMetaData) con.getMetaData();
			     System.out.println("Driver name: " + dm.getDriverName());
			     System.out.println("Driver version: " + dm.getDriverVersion());
			     System.out.println("Product name: " + dm.getDatabaseProductName());
			     System.out.println("Product version: " + dm.getDatabaseProductVersion());
			 } */

			 String query =  "select A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22 from try1;";
				//pstCheckExist = con.prepareStatement(query);

			rs = stmt.executeQuery(query);
			//STEP 5: Extract data from result set
	
      out.write("\r\n");
      out.write("\t\t<td><label>Free Shipping: </label></td>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t<table style=\"border: 1px solid #101010;\" id =\"fstTd\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t");

			while (rs.next()) {
					//Retrieve by column name
					String A1 = rs.getString("A1");
					String A2 = rs.getString("A2");
					String A3 = rs.getString("A3");
					String A4 = rs.getString("A4");
					String A5 = rs.getString("A5");
					String A6 = rs.getString("A6");
					String A7 = rs.getString("A7");
					String A8 = rs.getString("A8");
					String A9 = rs.getString("A9");
					String A10 = rs.getString("A10");
					String A11 = rs.getString("A11");
					String A12 = rs.getString("A12");
					String A13 = rs.getString("A13");
					String A14 = rs.getString("A14");
					String A15 = rs.getString("A15");
					String A16 = rs.getString("A16");
					String A17 = rs.getString("A17");
					String A18 = rs.getString("A18");
					String A19 = rs.getString("A19");
					String A20 = rs.getString("A20");
					String A21 = rs.getString("A21");
					String A22 = rs.getString("A22");
					
					//Display values
					System.out.print("A1" + A1);
					System.out.print(", A2" + A2);
					System.out.print(", A3 " + A3);
					System.out.print(", A4 " + A4);
					System.out.print(", A5 " + A5);
					System.out.print(", A6 " + A6);

					System.out.println("");
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("  \t\t\r\n");
      out.write("\t\t<tr style=\"background-color: #ECECEC;\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getString("A1"));
      out.write("</td> <td>");
      out.print(rs.getString("A2"));
      out.write("</td> <td>");
      out.print(rs.getString("A3"));
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getString("A4"));
      out.write("</td> <td>");
      out.print(rs.getString("A5"));
      out.write("</td> <td>");
      out.print(rs.getString("A6"));
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getString("A7"));
      out.write("</td> <td>");
      out.print(rs.getString("A8"));
      out.write("</td> <td>");
      out.print(rs.getString("A9"));
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getString("A10"));
      out.write("</td> <td>");
      out.print(rs.getString("A11"));
      out.write("</td> <td>");
      out.print(rs.getString("A12"));
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getString("A13"));
      out.write("</td> <td>");
      out.print(rs.getString("A14"));
      out.write("</td> <td>");
      out.print(rs.getString("A15"));
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getString("A16"));
      out.write("</td> <td>");
      out.print(rs.getString("A17"));
      out.write("</td> <td>");
      out.print(rs.getString("A18"));
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getString("A19"));
      out.write("</td> <td>");
      out.print(rs.getString("A20"));
      out.write("</td> <td>");
      out.print(rs.getString("A21"));
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getString("A22"));
      out.write("</td> \r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t");

			}
		
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t");

		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
      out.write("\r\n");
      out.write("<div id=\"afterRun\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_s_005fproperty_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  s:property
    org.apache.struts2.views.jsp.PropertyTag _jspx_th_s_005fproperty_005f0 = (org.apache.struts2.views.jsp.PropertyTag) _005fjspx_005ftagPool_005fs_005fproperty_0026_005fvalue_005fnobody.get(org.apache.struts2.views.jsp.PropertyTag.class);
    _jspx_th_s_005fproperty_005f0.setPageContext(_jspx_page_context);
    _jspx_th_s_005fproperty_005f0.setParent(null);
    // /success.jsp(34,1) name = value type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_s_005fproperty_005f0.setValue("myFileFileName");
    int _jspx_eval_s_005fproperty_005f0 = _jspx_th_s_005fproperty_005f0.doStartTag();
    if (_jspx_th_s_005fproperty_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fs_005fproperty_0026_005fvalue_005fnobody.reuse(_jspx_th_s_005fproperty_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fs_005fproperty_0026_005fvalue_005fnobody.reuse(_jspx_th_s_005fproperty_005f0);
    return false;
  }
}
